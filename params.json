{
  "name": "PythonBrainFuck",
  "tagline": "A very (!) fast BrainFuck interpreter in Python",
  "body": "Here is a BrainFuck example:\r\n```bf\r\n+++++ +++++             initialize counter (cell #0) to 10\r\n[                       use loop to set the next four cells to 70/100/30/10\r\n> +++++ ++              add  7 to cell #1\r\n> +++++ +++++           add 10 to cell #2\r\n> +++                   add  3 to cell #3\r\n> +                     add  1 to cell #4\r\n<<<< -                  decrement counter (cell #0)\r\n]\r\n> ++ .                  print 'H'\r\n> + .                   print 'e'\r\n+++++ ++ .              print 'l'\r\n.                       print 'l'\r\n+++ .                   print 'o'\r\n> ++ .                  print ' '\r\n<< +++++ +++++ +++++ .  print 'W'\r\n> .                     print 'o'\r\n+++ .                   print 'r'\r\n----- - .               print 'l'\r\n----- --- .             print 'd'\r\n> + .                   print '!'\r\n> .                     print '\\n'\r\n```\r\n\r\nHow to use the interpreter:\r\n```bash\r\n./bf.py hello.bf\r\nHello World!\r\n```\r\n\r\nSpeeding things up\r\n------------------\r\n\r\nThe interpreter is actually written in Rpython, so it can be statically compiled using the Pypy toolchain. Download the latest source of Pypy and uncompress it in a `pypy-src` folder.\r\n\r\n```bash\r\nwget 'https://bitbucket.org/pypy/pypy/downloads/pypy-5.0.0-src.tar.bz2'\r\ntar -xvjf pypy-5.0.0-src.tar.bz2\r\nmv pypy-5.0.0-src pypy-src\r\n```\r\n\r\nThen you can build from the Python script `bf.py` an executable binary `bf-c`:\r\n```bash\r\n# This will take about 1 minute\r\npython pypy-src/rpython/bin/rpython bf.py\r\n# Mandelbrot completes in a bit more than 1 minute\r\n./bf-c examples/mandel.b\r\n```\r\n\r\nYou can rebuild the `bf-c` using `--opt=jit` to add a JIT to your BrainFuck interpreter:\r\n```bash\r\n# This will take about 25 minutes\r\npython pypy-src/rpython/bin/rpython --opt=jit bf.py\r\n# Mandelbrot now completes in 15 seconds(!)\r\n./bf-c examples/mandel.b\r\n```\r\n\r\nHere is a summary of the speed gain I could observe on a Fedora (22) VM (4 cores, 4Go of RAM), running `mandel.b`:\r\n* the initial `bf.py` with CPython (2.7): about 4 hours (baseline)\r\n* the initial `bf.py` with Pypy (2.4): 8 minutes (30x)\r\n* the initial `bf.py` with Pypy (5.0.1): 4 minutes (60x)\r\n* the `bf-c` without JIT: 1min15s (x200)\r\n* the `bf-c` with JIT: 15 seconds (x1000)\r\n\r\nI also tested Brainfuck interpreters written in C ([source](http://mazonka.com/brainf/)). After compilation with `gcc -O3` (5.1), running `mandel.b` take from 12 to 15 seconds to run, so it is in the same order of magnitude as the JIT version (without `-O3`, it takes 30 seconds).\r\n\r\nTo complete those numbers, I finally tested a [Brainfuck to C translator](https://gist.github.com/Ricket/939687), then compiled the C version of the `mandel.b` program. With `-O3`, the compiled `mandel.b` runs in about 2 seconds (without `-O3`, it takes 30 seconds).\r\n\r\nThe JIT addition contains code from [this amazing tutorial on JITs](http://morepypy.blogspot.fr/2011/04/tutorial-part-2-adding-jit.html).\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}